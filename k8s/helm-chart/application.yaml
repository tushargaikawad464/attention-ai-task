---
# Source: sample-app/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-sample-app
  labels:
    helm.sh/chart: sample-app-0.1.0
    app.kubernetes.io/name: sample-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: sample-app/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-sample-app-env-secrets
type: Opaque
data:
  pass: "1234"
---
# Source: sample-app/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-sample-app-env-config
data:
  product: "sample-app"
---
# Source: sample-app/templates/pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: release-name-sample-app-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data
---
# Source: sample-app/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-sample-app-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: sample-app/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-sample-app
  labels:
    helm.sh/chart: sample-app-0.1.0
    app.kubernetes.io/name: sample-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sample-app
    app.kubernetes.io/instance: release-name
---
# Source: sample-app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-sample-app
  labels:
    helm.sh/chart: sample-app-0.1.0
    app.kubernetes.io/name: sample-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sample-app
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sample-app
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: regcred
      serviceAccountName: release-name-sample-app
      securityContext:
        {}
      containers:
        - name: sample-app
          securityContext:
            {}
          image: "imtushar464/nodeapp:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          envFrom:
            - configMapRef:
                name: release-name-sample-app
            - secretRef:
                name: release-name-sample-app
